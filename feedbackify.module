<?php

/**
 * @file
 * Contains feedbackify.module.
 */
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function feedbackify_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the feedbackify module.
    case 'help.page.feedbackify':
      $output = '';
      $output .= '<h3>' . (string) t('About') . '</h3>';
      $output .= '<p>' . (string) t('Please use your form ID from your Feedbackify account. See http://www.feedbackify.com for a demo and more information.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_page_attachments().
 *
 * Add Feedbackify library if allowed.
 */
function feedbackify_page_attachments_alter(array &$page) {

  // Check for current user permissions.
  if (!\Drupal::currentUser()->hasPermission('view feedbackify button')) {
    return;
  }
  dsm(\Drupal::service('router.admin_context'));
  // Disallow adding the script on admin pages.
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    return;
  }

  // @todo: Implement.
  // _feedbackify_visibility_pages();

  $config = \Drupal::config('feedbackify.settings');

  // Feedbackify id is a must configuration.
  if($id = $config->get('confs.feedbackify_id')){
    $page['#attached']['library'][] = 'feedbackify/feedbackify';
    $page['#attached']['drupalSettings']['feedbackify'] = [
      'feedbackifyId' => $id,
      'feedbackifyPos' => $config->get('confs.feedbackify_position'),
      'feedbackifyColor' => $config->get('confs.feedbackify_color'),
    ];
  }
}

/**
 * Helper function.
 *
 * Determine if the Feedbackify code should be printed on the current page.
 * @todo Convert to drupal8 standards.
 */
function _feedbackify_visibility_pages() {
  $visibility = variable_get('feedbackify_visibility', 0);
  $pages = variable_get('feedbackify_pages', '');

  // Match path if necessary.
  if (!empty($pages)) {
    $path = drupal_get_path_alias($_GET['q']);
    // Compare with the internal and path alias (if any).
    $page_match = drupal_match_path($path, $pages);
    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }
    // When $visibility has a value of 0, the block is displayed on
    // all pages except those listed in $pages. When set to 1, it
    // is displayed only on those pages listed in $pages.
    $page_match = !($visibility xor $page_match);
  }
  else {
    $page_match = TRUE;
  }

  return $page_match;
}